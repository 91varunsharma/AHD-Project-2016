00000000000000000101000000010000
00000000000000000100000000010000
00000000000000000100100000010000
00000000000000000000100000010000
00000100000100010000000001001110
00000100000100100000000000011010
00000100000100110000000000000100
00101010001010100000000000011100
00011101000010110000000000000010
00000001011001000101100000010000
00000001011001110001100000010000
00010100011011010000000000000011
00011000011011100000000000011101
00000001101011100010000000010000
00000000100000100010100000010000
00011101001011000000000000011100
00000001100001010011000000010000
00001100101011100000000000011111
00000000000000000110100000010000
00000000000001100011100000010000
00101001101011100000000000000101
00010100111011110000000000000001
00011000111100000000000000011111
00000001111100000011100000010000
00000101101011010000000000000001
00110000000000000000000000010101
00100001000001000000000000000010
00100001001001110000000000011100
00000101000010000000000000000001
00000101001010010000000000000001
00000101010010100000000000000001
00101101000100100000000000000001
00000000000000000100000000010000
00101101001100110000000000000001 // branching to skip reset => imm = 36
00000000000000000100100000010000
00110000000000000000000000001000 //jumping to return //end of key generation
0001110000000000010000000000000000
0001110000000000100000000000000001
00000000000000000001100000010000
00000100000111100000000000011010
00000000000000000010000000010000
00000000000000000010100000010000
00011100011111110000000000000010 // This will load S[0] in R31 mem => 2
00000000001111110010000000010000
00011100011111110000000000000011
00000000010111110010100000010000
00000100011000110000000000000010
00101000011111100000000000011110 //branch to just after the end
00000000100001010011000000010010 //This is the place where the code will return at the end
00000000101001110011100000010100
00000000110001110100000000010100 //this is changed to nor
00001100101001110000000000011111
00000000000000000011000000010000
00000000000010000100100000010000
00101000110001110000000000000101 //Branch to immediately after the jump instruction
00010101001010100000000000000001
00011001001010110000000000011111
00000001010010110100100000010000
00000100110001100000000000000001
00110000000000000000000000110111 //jump to the branch instruction
00011100011111110000000000000010 //offset is 2 for memory
00000001001111110010000000010000
00000000100001010011000000010010
00000000101001000011100000010100
00000000101001110110000000010100 //this is changed to nor
00001100100001110000000000011111
00000000000000000011000000010000
00000000000011000110100000010000
00101000110001110000000000000101 //branch immediate value will be just after jump
00010101101010100000000000000001
00011001101010110000000000011111
00000001010010110110100000010000
00000100110001100000000000000001
00110000000000000000000001000101 //jump value should go back to branch
00011100011111110000000000000010 //offset for memory is 2
00000001101111110010100000010000
00000100011000110000000000000010
00110000000000000000000000110000  //This should go to the return
00100000000001000000000000100000//sw R0 R4 32
00100000000001010000000000100001//sw R0 R5 33 //end of encryption
00011100000001000000000000100000
00011100000001010000000000100001
00000100000000110000000000011000
00101000011000000000000000011110
00011100011010000000000000000011
00000000101010000011100000010001
00001100100010010000000000011111
00000000000000000100000000010000
00000000000001110101100000010000
00101001000010010000000000000101
00011001011011000000000000000001
00010101011011010000000000011111
00000001100011010101100000010000
00000101000010000000000000000001
00110000000000000000000001011010
00000000100010110100000000010010
00000001011001000100100000010100
00000001000010010010100000010100
00011100011010000000000000000010
00000000100010000011000000010001
00001100101010010000000000011111
00000000000000000100000000010000
00000000000001100101000000010000
00101001000010010000000000000101
00011001010011000000000000000001
00010101010011010000000000011111
00000001100011010101000000010000
00000101000010000000000000000001
00110000000000000000000001101000
00000001010001010100000000010100
00000000101010100100100000010010
00000001000010010010000000010100
00001000011000110000000000000010
00110000000000000000000001010100
00011100011010000000000000000011
00000000101010000010100000010001
00011100011010000000000000000010
00000000100010000010000000010001
00100000000001000000000000100010
00100000000001010000000000100011





