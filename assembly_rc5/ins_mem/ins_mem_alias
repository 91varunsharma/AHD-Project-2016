ADD R0 R0 R12 															####### initialize everything to 0
ADD R0 R0 R13
ADD R0 R0 R1
ADD R0 R0 R2
ADDI R0 R14 77
ADDI R0 R10 25
ADDI R0 R11 3
ADDI R0 R20 1
ADDI R0 R17 0 					# LOAD THE S[0] LOCATION INTO TEMPORARY VARIABLE # finalize later
ADDI R0 R18 40 					# LOAD THE L[0] LOCATION INTO TEMPORARY VARIABLE # finalize later
ADDI R0 R26 60 					# LOAD THE ADDRESS OF S_KEY[0]


LW R17 R15 0 					# LOAD S[i] # LOOP BEGINS HERE
ADD R1 R2 R5 					# A_REG+B_REG
ADD R5 R15 R5 					# A_REG+B_REG+S[i]
JMP 52 							# JUMP FOR ROTATION, A_TMP2 IN R6
ADD R0 R6 R1 					# UPDATE A_REG
SW R26 R1 0 					# STORE THE UPDATED S[i] 				###### Check the location
ADD R1 R2 R9 					# AB_TMP
LW R18 R16 0 					# LOAD L[i]
ADD R16 R9 R7 					# L[0]+AB_TMP
ANDI R9 R9 31 					# MOD BY 32
ADD R0 R7 R22 					# ADD B_TMP1 FOR ROTATION NUM
ADD R0 R9 R24 					# ADD AB_TMP FOR ROTATION AMOUNT
JMP 162 						# ROTATION BY AB_TMP, B_TMP2 IN R8
ADD R0 R23 R8 					# ADD OUTPUT TO B_TMP2 
ADD R0 R8 R2 					# UPDATE B_REG
SW R18 R2 0 					# STORE THE UPDATED L[i]
BEQ R10 R12 10
ADDI R12 R12 1					# INCREMENT i
ADD R17 R12 R17 				# UPDATE S ADDRESS
ADDI R26 R26 1 					# UPDATE ADDRESS OF S_KEY
BEQ R11 R13 12
ADDI R13 R13 1					# INCREMENT j
ADD R18 R13 R18 				# UPDATE L ADDRESS
BEQ R0 R14 552 					# HALT
JMP 13 							# JUMP TO THE START OF THE LOOP


ADDI R0 R17 0 					# GO TO S[0] AGAIN # ADDRESS#1
ADDI R0 R26 60
ADDI R0 R12 0 					# SET i=0
JMP 32 							# TO WHERE THE PROGRAM CAME FROM


ADDI R0 R18 40 					# GO TO L[0] AGAIN # ADDRESS#2
ADDI R0 R13 0 					# SET j=0
JMP 35 							# TO WHERE THE PROGRAM CAME FROM



ADDI R21 R21 255 				# INITIALIZE REGISTER WITH ALL 1'S # ADDRESS#3
SHL R21 R21 29 					# SHIFT FOR MASKING
AND R5 R21 R21 					# MASK
SHR R21 R21 29 					# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R5 R5 3						# SHIFT THE NUMBER
OR R5 R21 R6 					# OR WITH THE MASKED BITS
JMP 17 							# TO WHERE THE PROGRAM CAME FROM







ADDI R0 R20 2
ADDI R3 R3 26
LW R0 R1 50 					# LOAD A_REG
LW R0 R2 51 					# LOAD B_REG
ADDI R0 R11 60 					# STORE THE ADDRESS OF S[0]
LW R11 R12 0 					# LOAD S[i]
ADD R1 R12 R1 					# A_REG + S[0]
ADDI R11 R11 1
ADDI R4 R4 1
LW R11 R12 0
ADD R2 R12 R2



OR R1 R2 R30 					# XOR STARTS HERE # LOOP STARTS HERE
AND R1 R2 R31
SUB R30 R31 R5 					# XOR ENDS HERE
ADD R0 R5 R22 					# ADD THE ROTATE NUM AB_XOR
ANDI R2 R2 31 					# MOD BY 32
ADD R0 R2 R24 					# ADD THE ROTATE AMT B_REG
JMP 162 						# ROT
ADD R0 R23 R7 					# ADD THE ROTATE OUTPUT TO A_ROT
ADDI R11 R11 1
ADDI R4 R4 1
LW R11 R12 0
ADD R7 R12 R1
OR R1 R2 R30 					# XOR STARTS HERE
AND R1 R2 R31
SUB R30 R31 R6 					# XOR ENDS HERE
ADD R0 R6 R22 					# ADD THE ROTATE NUM AB_XOR
ANDI R1 R1 31 					# MOD BY 32
ADD R0 R1 R24 					# ADD THE ROTATE AMT B_REG
ADDI R0 R20 4
JMP 162 						# ROT
ADD R0 R23 R8 					# ADD THE ROTATE OUTPUT TO A_ROT
ADDI R11 R11 1
ADDI R4 R4 1
LW R11 R12 0
ADD R8 R12 R2
BEQ R3 R4 483 					# HALT
JMP 80 							# RETURN TO LOOP





ADDI R0 R20 3
ADDI R3 R3 2 					# SET i TO 2
ADDI R4 R4 25 					# SET i_tmp TO 25
LW R0 R1 55 					# LOAD A_REG
LW R0 R2 56 					# LOAD B_REG
ADDI R0 R11 60 					# STORE THE ADDRESS OF S[0]
ADDI R11 R11 25					# GO TO THE ADDRESS OF S[25]
LW R11 R12 0 					# LOAD S[i]
SUB R2 R12 R2 					# LOOP BEGINS HERE
ADD R0 R2 R22 					# ROT BEGINS HERE
ANDI R1 R1 31 					# MOD BY 32
ADD R0 R1 R24
JMP 228 						# ROT
ADD R0 R23 R8 					# ROT ENDS HERE
OR R8 R1 R30 					# XOR STARTS HERE
AND R8 R1 R31
SUB R30 R31 R6 					# XOR ENDS HERE
ADD R0 R6 R2
SUBI R4 R4 1
SUBI R11 R11 1
LW R11 R12 0
SUB R1 R12 R1
ADD R0 R1 R22 					# ROT BEGINS HERE
ANDI R2 R2 31 					# MOD BY 32
ADD R0 R2 R24
ADDI R0 R20 5
JMP 228 						# ROT
ADD R0 R23 R7 					# ROT ENDS HERE
OR R7 R2 R30 					# XOR STARTS HERE
AND R7 R2 R31
SUB R30 R31 R5 					# XOR ENDS HERE
ADD R0 R5 R1
SUBI R4 R4 1
SUBI R11 R11 1
LW R11 R12 0
BEQ R3 R4 3
JMP 120 						# RETURN TO LOOP


SUB R2 R12 R2 					# BRANCH_ADDRESS#1
SUBI R11 R11 1
SUB R1 R12 R1
JMP 434 						# HAL







ADDI R21 R21 255 				# INITIALIZE REGISTER WITH ALL 1'S # Left rotation
ADD R0 R0 R19
BEQ R19 R24 413
ADDI R19 R19 1
BEQ R19 R24 128
ADDI R19 R19 1
BEQ R19 R24 135
ADDI R19 R19 1
BEQ R19 R24 142
ADDI R19 R19 1
BEQ R19 R24 149
ADDI R19 R19 1 
BEQ R19 R24 156
ADDI R19 R19 1
BEQ R19 R24 163
ADDI R19 R19 1
BEQ R19 R24 170
ADDI R19 R19 1
BEQ R19 R24 177
ADDI R19 R19 1
BEQ R19 R24 184
ADDI R19 R19 1
BEQ R19 R24 191
ADDI R19 R19 1
BEQ R19 R24 198
ADDI R19 R19 1
BEQ R19 R24 205
ADDI R19 R19 1
BEQ R19 R24 212
ADDI R19 R19 1
BEQ R19 R24 219
ADDI R19 R19 1
BEQ R19 R24 226
ADDI R19 R19 1
BEQ R19 R24 233
ADDI R19 R19 1
BEQ R19 R24 240
ADDI R19 R19 1
BEQ R19 R24 247
ADDI R19 R19 1
BEQ R19 R24 254
ADDI R19 R19 1
BEQ R19 R24 261
ADDI R19 R19 1
BEQ R19 R24 268
ADDI R19 R19 1
BEQ R19 R24 275
ADDI R19 R19 1
BEQ R19 R24 282
ADDI R19 R19 1
BEQ R19 R24 289
ADDI R19 R19 1
BEQ R19 R24 296
ADDI R19 R19 1
BEQ R19 R24 303
ADDI R19 R19 1
BEQ R19 R24 310
ADDI R19 R19 1
BEQ R19 R24 317
ADDI R19 R19 1
BEQ R19 R24 324
ADDI R19 R19 1
BEQ R19 R24 331
ADDI R19 R19 1
BEQ R19 R24 338

ADDI R21 R21 255 				# INITIALIZE REGISTER WITH ALL 1'S # right rotate
ADD R0 R0 R19
BEQ R19 R24 347
ADDI R19 R19 1
BEQ R19 R24 332
ADDI R19 R19 1
BEQ R19 R24 321
ADDI R19 R19 1
BEQ R19 R24 310
ADDI R19 R19 1
BEQ R19 R24 299
ADDI R19 R19 1 
BEQ R19 R24 288
ADDI R19 R19 1
BEQ R19 R24 277
ADDI R19 R19 1
BEQ R19 R24 266
ADDI R19 R19 1
BEQ R19 R24 255
ADDI R19 R19 1
BEQ R19 R24 244
ADDI R19 R19 1
BEQ R19 R24 233
ADDI R19 R19 1
BEQ R19 R24 222
ADDI R19 R19 1
BEQ R19 R24 211
ADDI R19 R19 1
BEQ R19 R24 200
ADDI R19 R19 1
BEQ R19 R24 189
ADDI R19 R19 1
BEQ R19 R24 178
ADDI R19 R19 1
BEQ R19 R24 167
ADDI R19 R19 1
BEQ R19 R24 156
ADDI R19 R19 1
BEQ R19 R24 145
ADDI R19 R19 1
BEQ R19 R24 134
ADDI R19 R19 1
BEQ R19 R24 123
ADDI R19 R19 1
BEQ R19 R24 112
ADDI R19 R19 1
BEQ R19 R24 101
ADDI R19 R19 1
BEQ R19 R24 90
ADDI R19 R19 1
BEQ R19 R24 79
ADDI R19 R19 1
BEQ R19 R24 68
ADDI R19 R19 1
BEQ R19 R24 57
ADDI R19 R19 1
BEQ R19 R24 46
ADDI R19 R19 1
BEQ R19 R24 35
ADDI R19 R19 1
BEQ R19 R24 24
ADDI R19 R19 1
BEQ R19 R24 13
ADDI R19 R19 1
BEQ R19 R24 2


SHL R21 R21 31 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 31 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 1				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK	



SHL R21 R21 30 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 30 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 2				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 29 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 29 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 3				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 28 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 28 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 4				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 27 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 27 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 5				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 26 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 26 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 6				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 25 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 25 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 7				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 24 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 24 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 8				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 23 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 23 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 9				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 22 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 22 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 10				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK	



SHL R21 R21 21 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 21 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 11				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 20 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 20 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 12				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 19 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 19 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 13				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 18 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 18 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 14				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 17 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 17 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 15				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 16 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 16 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 16				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 15 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 15 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 17				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 14 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 14 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 18				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 13 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 13 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 19				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 12 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 12 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 20				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 11 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 11 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 21				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 10 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 10 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 22				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 9 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 9 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 23				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 8 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 8 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 24				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 7 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 7 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 25				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 6 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 6 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 26				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 5 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 5 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 27				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 4 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 4 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 28				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 3 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 3 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 29				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 2 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 2 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 30				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK



SHL R21 R21 1 				# SHIFT FOR MASKING
AND R22 R21 R21 			# MASK
SHR R21 R21 1 				# SHIFT THE MASKED BITS AT RIGHT LOCATION
SHL R22 R22 31				# SHIFT THE NUMBER
OR R22 R21 R23 				# OR WITH THE MASKED BITS
JMP 578 					# JUMP_BACK	







ADDI R0 R25 2
BLT R20 R25 -554
ADDI R25 R25 1
BLT R20 R25 -495
ADDI R25 R25 1
BLT R20 R25 -459
ADDI R25 R25 1
BLT R20 R25 -486
ADDI R25 R25 1
BLT R20 R25 -449

HAL