# Register File info

R0 Hard coded to 0x0
R1 a_reg
R2 b_reg
R3 i
R4 i_tmp
R5 ab_xor
R6 ba_xor
R7 a_rot
R8 b_rot
R11 s_arr[0]-address
R12 s_arr_tmp

# common registers
R22 rot_num
R23 rot_out
R27 a1
R28 b1
R29 o1
R30 ab_or
R31 ab_and


# Assembly code:

	# Initialization

	LW RO R1 #ADDRESS 				# LOAD A_REG
	LW R0 R2 #ADDRESS 				# LOAD B_REG
	ADDI R0 R11 #ADDRESS 			# STORE THE ADDRESS OF S[0]
	LW R11 R12 0 					# LOAD S[i]
	ADD R1 R12 R1 					# A_REG + S[0]
	ADDI R11 R11 1
	ADDI R4 R4 1
	LW R11 R12 0
	ADD R2 R12 R2
		# LOOP BEGINS HERE
	ADD R0 R1 R27 					# STORE A_REG FOR XOR
	ADD R0 R2 R28 					# STORE B_REG FOR XOR
	JMP #ADDRESS 
	ADD R0 R29 R5 					# XOR OUTPUT
	JMP #ADDRESS 					# ROT
	ADDI R11 R11 1
	ADDI R4 R4 1
	LW R11 R12 0
	ADD R7 R12 R1
	ADD R0 R1 R27
	ADD R0 R2 R28
	JMP #ADDRESS 
	ADD R0 R29 R5 
	JMP #ADDRESS
	ADDI R11 R11 1
	ADDI R4 R4 1
	LW R11 R12 0
	ADD R8 R12 R2
	BEQ R3 R4 #BRANCH_ADDRESS#1
	JMP #ADDRESS 					# RETURN TO LOOP

	# XOR

	OR R27 R28 R30
	AND R27 R28 R31
	SUB R30 R31 R29
	JMP # BACK TO WHERE IT CAME FROM

	#BRANCH_ADDRESS#1

	HAL




